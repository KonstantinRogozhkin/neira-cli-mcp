import fs from 'fs-extra';
import path from 'path';
import chalk from 'chalk';

interface NeiraAppManifest {
  name: string;
  version: string;
  description: string;
  author: string;
  main: string;
  icon?: string;
  permissions?: string[];
  category?: string;
  tags?: string[];
}

export async function validateApp() {
  console.log(chalk.blue('üîç –í–∞–ª–∏–¥–∞—Ü–∏—è neira-app.json...'));

  const manifestPath = path.join(process.cwd(), 'neira-app.json');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞
  if (!fs.existsSync(manifestPath)) {
    throw new Error('–§–∞–π–ª neira-app.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
  }

  let manifest: NeiraAppManifest;
  try {
    manifest = await fs.readJson(manifestPath);
  } catch (error) {
    throw new Error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è neira-app.json: ${error}`);
  }

  const errors: string[] = [];
  const warnings: string[] = [];

  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  if (!manifest.name) {
    errors.push('–ü–æ–ª–µ "name" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
  } else if (typeof manifest.name !== 'string') {
    errors.push('–ü–æ–ª–µ "name" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
  } else if (manifest.name.length < 3) {
    errors.push('–ü–æ–ª–µ "name" –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞');
  }

  if (!manifest.version) {
    errors.push('–ü–æ–ª–µ "version" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
  } else if (typeof manifest.version !== 'string') {
    errors.push('–ü–æ–ª–µ "version" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
  } else if (!/^\d+\.\d+\.\d+$/.test(manifest.version)) {
    errors.push('–ü–æ–ª–µ "version" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ X.Y.Z (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1.0.0)');
  }

  if (!manifest.description) {
    errors.push('–ü–æ–ª–µ "description" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
  } else if (typeof manifest.description !== 'string') {
    errors.push('–ü–æ–ª–µ "description" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
  } else if (manifest.description.length < 10) {
    warnings.push('–ü–æ–ª–µ "description" —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)');
  }

  if (!manifest.author) {
    errors.push('–ü–æ–ª–µ "author" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
  } else if (typeof manifest.author !== 'string') {
    errors.push('–ü–æ–ª–µ "author" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
  }

  if (!manifest.main) {
    errors.push('–ü–æ–ª–µ "main" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
  } else if (typeof manifest.main !== 'string') {
    errors.push('–ü–æ–ª–µ "main" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
  } else {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    const mainPath = path.join(process.cwd(), manifest.main);
    if (!fs.existsSync(mainPath)) {
      errors.push(`–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª "${manifest.main}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  }

  // –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  if (manifest.icon) {
    if (typeof manifest.icon !== 'string') {
      errors.push('–ü–æ–ª–µ "icon" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    } else {
      const iconPath = path.join(process.cwd(), manifest.icon);
      if (!fs.existsSync(iconPath)) {
        warnings.push(`–§–∞–π–ª –∏–∫–æ–Ω–∫–∏ "${manifest.icon}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
    }
  } else {
    warnings.push('–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  }

  if (manifest.permissions) {
    if (!Array.isArray(manifest.permissions)) {
      errors.push('–ü–æ–ª–µ "permissions" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º');
    } else {
      const validPermissions = ['chat', 'context', 'files', 'network', 'storage'];
      const invalidPermissions = manifest.permissions.filter(p => !validPermissions.includes(p));
      if (invalidPermissions.length > 0) {
        errors.push(`–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${invalidPermissions.join(', ')}`);
      }
    }
  }

  if (manifest.category) {
    if (typeof manifest.category !== 'string') {
      errors.push('–ü–æ–ª–µ "category" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    } else {
      const validCategories = ['utility', 'productivity', 'entertainment', 'education', 'business', 'developer'];
      if (!validCategories.includes(manifest.category)) {
        warnings.push(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è "${manifest.category}". –î–æ—Å—Ç—É–ø–Ω—ã–µ: ${validCategories.join(', ')}`);
      }
    }
  }

  if (manifest.tags) {
    if (!Array.isArray(manifest.tags)) {
      errors.push('–ü–æ–ª–µ "tags" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º');
    } else if (manifest.tags.length > 10) {
      warnings.push('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ç–µ–≥–æ–≤ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∞–∫—Å–∏–º—É–º 10)');
    }
  }

  // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  if (errors.length > 0) {
    console.log(chalk.red('‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏:'));
    errors.forEach(error => {
      console.log(chalk.red(`  ‚Ä¢ ${error}`));
    });
  }

  if (warnings.length > 0) {
    console.log(chalk.yellow('‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:'));
    warnings.forEach(warning => {
      console.log(chalk.yellow(`  ‚Ä¢ ${warning}`));
    });
  }

  if (errors.length === 0) {
    console.log(chalk.green('‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç –≤–∞–ª–∏–¥–µ–Ω!'));
    if (warnings.length === 0) {
      console.log(chalk.green('   –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.'));
    }
  } else {
    throw new Error(`–ù–∞–π–¥–µ–Ω–æ ${errors.length} –æ—à–∏–±–æ–∫ –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ`);
  }
} 