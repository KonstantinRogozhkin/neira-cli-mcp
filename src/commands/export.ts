import { promises as fs } from 'fs';
import path from 'path';
import chalk from 'chalk';
import { spawn } from 'child_process';

/**
 * –ü—Ä–æ—Ñ–∏–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–¥–∞
 */
export const EXPORT_PROFILES = {
  general: '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —Ç–µ—Å—Ç–æ–≤',
  mobile: '–ú–æ–±–∏–ª—å–Ω–∞—è —á–∞—Å—Ç—å (neira-mobile-core + neira-mobile-bff)',
  community: '–û—Ç–∫—Ä—ã—Ç–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ (neira-core + neira-apps)',
  enterprise: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å (neira-enterprise)',
  cli: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (neira-cli-mcp)',
  cloud: '–û–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (neira-cloud-backend)',
  docs: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (neira-docs/docs + README —Ñ–∞–π–ª—ã)',
  build: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ –∏ CI',
  tests: '–¢–µ—Å—Ç—ã –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã',
  all: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–Ω—ã–π –¥–∞–º–ø'
} as const;

export type ExportProfile = keyof typeof EXPORT_PROFILES;

/**
 * –û–±—â–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–¥–∞
 */
const COMMON_EXCLUDES = [
  // === –û–°–ù–û–í–ù–´–ï –ê–†–¢–ï–§–ê–ö–¢–´ –°–ë–û–†–ö–ò –ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ò ===
  "**/node_modules/**", "**/dist/**", "**/out/**", "**/build/**", "**/.next/**",
  "**/.turbo/**", "**/coverage/**", "*.log", "*.map", "*.lock",
  "*.DS_Store", "*.idea*", "*.vscode*", ".git/**",
  "*/.neira/export_code/*",
  
  // === –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –ê–†–¢–ï–§–ê–ö–¢–´ –°–ë–û–†–ö–ò ===
  "**/shell/shell/out/**", "**/shell/out/**",
  "**/chrome-context-menu/dist/**",
  "**/chrome-extensions/dist/**", "**/chrome-extensions/spec/**",
  "**/chrome-extensions/script/native-messaging-host/dist/**",
  "**/chrome-extensions/script/native-messaging-host/crxtesthost*",
  "**/chrome-extensions/script/native-messaging-host/*.blob",
  "**/chrome-web-store/dist/**",
  "**/logger/dist/**",
  "**/shell/shell/resources/vscode/dist/**",
  
  // Next.js –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  "**/neira-app/out/**", "**/neira-app/generated/**",
  "**/neira-app/.next/**",
  
  // === –î–£–ë–õ–ò–ö–ê–¢–´ –ò –ü–û–î–ú–û–î–£–õ–ò ===
  "**/neira-enterprise/platform/**", // Git submodule –¥—É–±–ª–∏–∫–∞—Ç neira-core
  
  // === –í–†–ï–ú–ï–ù–ù–´–ï –§–ê–ô–õ–´ –ò –õ–û–ì–ò ===
  "**/logs/**", "**/tmp/**", "**/temp/**", "**/.cache/**",
  "**/electron.vite.config.*.mjs", // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏ —Å–±–æ—Ä–∫–∏
  
  // === –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï –ò –ü–†–ò–ú–ï–†–´ ===
  "**/__tests__/**", "**/spec/**", "**/test/**", "**/*test*/**",
  "**/neira-apps/examples/**",
  "**/fixtures/**",
  
  // === –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø (–ö–†–û–ú–ï –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–û–ô) ===
  "**/neira-docs/blog/**", "**/neira-docs/src/**", "**/neira-docs/static/**",
  "**/neira-docs/docusaurus.config.ts", "**/neira-docs/sidebars.ts",
  "**/.docusaurus/**", "**/resources/docs-site/**",
  
  // === –ë–ò–ù–ê–†–ù–´–ï –ò –ú–ï–î–ò–ê –§–ê–ô–õ–´ ===
  "*.png", "*.jpg", "*.jpeg", "*.gif", "*.bmp", "*.webp", "*.svg", "*.tiff", "*.tif",
  "*.ico", "*.icns", "*.wav", "*.mp3", "*.mp4", "*.avi", "*.mov",
  "*.css", "*.dll", "*.bin", "*.dmg", "*.pdf", "*.exe",
  "*.ttf", "*.woff", "*.woff2", "*.otf",
  
  // === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–û–ù–ù–´–ï –ò –°–õ–£–ñ–ï–ë–ù–´–ï –§–ê–ô–õ–´ ===
  "**/public/**", "**/drizzle/**", "**/*tmp.iconset*/**",
  "**/storybook-static/**", // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã Storybook
  "*.backup", "*.yml", "*.yaml", "**/*archive*/**", "**/*temp_knowledge*/**",
  "**/*openrouter-models.json*", "*.webpack*",
  "*package-lock.json", "*yarn.lock", "*.pnp.cjs", "*.pnp.js", "*.pnp.loader.mjs",
  
  // === YARN PNP –ò –£–°–¢–ê–ù–û–í–û–ß–ù–´–ï –§–ê–ô–õ–´ ===
  "**/.yarn/**", "**/install-state.gz",
  
  // === GIT –û–ë–™–ï–ö–¢–´ –ò –ò–ù–î–ï–ö–°–´ ===
  "**/.git/objects/**", "**/.git/index", "**/.git/logs/**",
  
  // === TYPESCRIPT –ò –°–ë–û–†–û–ß–ù–´–ï –§–ê–ô–õ–´ ===
  "*.tsbuildinfo", "*.tgz", "*.tar.gz",
  
  // === –ë–ê–ó–´ –î–ê–ù–ù–´–• ===
  "*.db", "*.sqlite", "*.sqlite3",
  
  // === –õ–ò–¶–ï–ù–ó–ò–û–ù–ù–´–ï –§–ê–ô–õ–´ ===
  "**/LICENSE", "**/LICENSE.*", "**/*.LICENSE", "**/COPYING", "**/COPYRIGHT",
  
  // === –£–°–¢–ê–†–ï–í–®–ò–ï –ò –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –ò–°–ö–õ–Æ–ß–ï–ù–ò–Ø ===
  "**/*electron-chrome-web-store*/**", "**/*docs-generator*/**",
  "**/shell/src/proto/**", "**/shell/resources/bin/**", "**/scripts/**"
];

/**
 * –ß–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª .exportignore –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
 */
async function readExportIgnore(projectRoot: string): Promise<string[]> {
  const exportIgnorePath = path.join(projectRoot, '.exportignore');
  
  try {
    const content = await fs.readFile(exportIgnorePath, 'utf-8');
    const patterns = content
      .split('\n')
      .map(line => line.trim())
      .filter(line => line && !line.startsWith('#')); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    
    if (patterns.length > 0) {
      console.log(chalk.gray(`üìã –ù–∞–π–¥–µ–Ω .exportignore —Å ${patterns.length} –ø—Ä–∞–≤–∏–ª–∞–º–∏`));
    }
    
    return patterns;
  } catch (error) {
    // –§–∞–π–ª .exportignore –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
    return [];
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ code2prompt
 */
async function checkCode2Prompt(): Promise<boolean> {
  return new Promise((resolve) => {
    console.log(chalk.gray('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è code2prompt...'));
    
    const child = spawn('code2prompt', ['--version'], { 
      stdio: 'pipe',
      shell: true 
    });
    
    let stdout = '';
    let stderr = '';
    
    child.stdout.on('data', (data) => {
      stdout += data.toString();
    });
    
    child.stderr.on('data', (data) => {
      stderr += data.toString();
    });
    
    child.on('close', (code) => {
      if (code === 0) {
        console.log(chalk.green(`‚úÖ code2prompt –Ω–∞–π–¥–µ–Ω: ${stdout.trim()}`));
        resolve(true);
      } else {
        console.log(chalk.red(`‚ùå code2prompt –Ω–µ –Ω–∞–π–¥–µ–Ω (–∫–æ–¥: ${code})`));
        if (stderr) {
          console.log(chalk.gray(`–û—à–∏–±–∫–∞: ${stderr.trim()}`));
        }
        resolve(false);
      }
    });
    
    child.on('error', (error) => {
      console.log(chalk.red(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ code2prompt: ${error.message}`));
      resolve(false);
    });
  });
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ NEIRA Super App
 */
async function findProjectRoot(): Promise<string> {
  let currentDir = process.cwd();
  
  while (currentDir !== path.parse(currentDir).root) {
    try {
      const files = await fs.readdir(currentDir);
      // –ò—â–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã/–ø–∞–ø–∫–∏ NEIRA Super App
      if (files.includes('neira-core') && files.includes('neira-cli-mcp')) {
        return currentDir;
      }
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
    }
    currentDir = path.dirname(currentDir);
  }
  
  throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ NEIRA Super App');
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
 */
async function getDynamicPackages(projectRoot: string): Promise<string[]> {
  const packages: string[] = [];
  
  try {
    const dirs = await fs.readdir(projectRoot);
    for (const dir of dirs) {
      if (dir.startsWith('neira-')) {
        const dirPath = path.join(projectRoot, dir);
        const stat = await fs.stat(dirPath);
        if (stat.isDirectory()) {
          const packageJsonPath = path.join(dirPath, 'package.json');
          try {
            await fs.access(packageJsonPath);
            packages.push(dir);
          } catch {
            // package.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
          }
        }
      }
    }
  } catch (error) {
    console.warn(chalk.yellow('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤'));
  }
  
  return packages;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è code2prompt –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è
 */
function buildCode2PromptArgs(
  projectRoot: string,
  profile: ExportProfile,
  outputFile: string,
  dynamicPackages: string[],
  additionalExcludes: string[] = []
): string[] {
  const args = [projectRoot, '--no-clipboard', '-O', outputFile];
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
  for (const exclude of COMMON_EXCLUDES) {
    args.push('-e', exclude);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .exportignore
  for (const exclude of additionalExcludes) {
    args.push('-e', exclude);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è
  switch (profile) {
    case 'general':
      args.push(
        '-i', 'package.json', '-i', 'README.md', '-i', 'CHANGELOG.md', '-i', 'ROADMAP.md',
        '-i', 'neira-mobile-core/package.json', '-i', 'neira-mobile-core/packages/**',
        '-i', 'neira-core/package.json', '-i', 'neira-core/packages/**',
        '-i', 'neira-enterprise/package.json', '-i', 'neira-enterprise/packages/**',
        '-i', 'neira-cli-mcp/package.json', '-i', 'neira-cli-mcp/src/**',
        '-i', 'neira-cloud-backend/package.json', '-i', 'neira-cloud-backend/services/**',
        '-e', '*tests*', '-e', '*test.ts', '-e', '*spec.ts', '-e', '.github/*',
        '-e', '*docs*', '-e', 'neira-docs/*'
      );
      break;
    case 'mobile':
      args.push(
        '-i', 'neira-mobile-core/**',
        '-e', '*tests*', '-e', '*test.ts', '-e', '*spec.ts'
      );
      break;
    case 'community':
      args.push(
        '-i', 'neira-core/**', '-i', 'neira-apps/**',
        '-e', '*tests*', '-e', '*test.ts', '-e', '*spec.ts'
      );
      break;
    case 'enterprise':
      args.push(
        '-i', 'neira-enterprise/**',
        '-e', '*tests*', '-e', '*test.ts', '-e', '*spec.ts'
      );
      break;
    case 'cli':
      args.push(
        '-i', 'neira-cli-mcp/**',
        '-e', '*tests*', '-e', '*test.ts', '-e', '*spec.ts'
      );
      break;
    case 'cloud':
      args.push(
        '-i', 'neira-cloud-backend/**',
        '-e', '*tests*', '-e', '*test.ts', '-e', '*spec.ts'
      );
      break;
    case 'docs':
      args.push(
        '-i', 'neira-docs/docs/**', '-i', '*.md', '-i', '**/README*',
        '-i', '*.mmd', '-i', '.neira/docs/**',
        '-e', '*node_modules*'
      );
      break;
    case 'build':
      args.push(
        '-i', 'package.json', '-i', 'turbo.json', '-i', '**/package.json',
        '-i', '*.config.js', '-i', '*.config.ts', '-i', '*.config.json',
        '-i', '.github/workflows/**', '-i', '**/scripts/**',
        '-i', 'tsconfig.json', '-i', '**/tsconfig.json'
      );
      break;
    case 'tests':
      args.push(
        '-i', '**/tests/**', '-i', '*test.ts', '-i', '*spec.ts',
        '-i', '**/scripts/**', '-i', '**/__tests__/**'
      );
      break;
    case 'all':
      // –î–ª—è 'all' –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∫–ª—é—á–µ–Ω–∏—è
      // –ò—Å–∫–ª—é—á–∞–µ–º —Ç—è–∂—ë–ª—ã–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ LibreChat UI, —á—Ç–æ–±—ã —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –æ–±—ä—ë–º –≤—ã–≥—Ä—É–∑–∫–∏
      args.push('-e', 'neira-core/packages/apps/librechat-ui/src/**');
      break;
    default:
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –ø–∞–∫–µ—Ç–æ–º
      if (dynamicPackages.includes(profile)) {
        args.push('-i', `${profile}/**`);
      } else {
        throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å: ${profile}`);
      }
  }
  
  return args;
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç code2prompt —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
 */
async function runCode2Prompt(args: string[]): Promise<void> {
  return new Promise((resolve, reject) => {
    console.log(chalk.gray(`–ó–∞–ø—É—Å–∫: code2prompt ${args.join(' ')}`));
    
    const child = spawn('code2prompt', args, { 
      stdio: ['pipe', 'pipe', 'pipe'],
      shell: true
    });
    
    let stdout = '';
    let stderr = '';
    
    child.stdout.on('data', (data) => {
      stdout += data.toString();
    });
    
    child.stderr.on('data', (data) => {
      stderr += data.toString();
    });
    
    child.on('close', (code) => {
      if (code === 0) {
        console.log(chalk.green('‚úÖ code2prompt –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ'));
        resolve();
      } else {
        console.log(chalk.red(`‚ùå code2prompt –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`));
        if (stderr) {
          console.log(chalk.gray(`–û—à–∏–±–∫–∞: ${stderr.trim()}`));
        }
        reject(new Error(`code2prompt –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`));
      }
    });
    
    child.on('error', (error) => {
      console.log(chalk.red(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ code2prompt: ${error.message}`));
      reject(error);
    });
  });
}

/**
 * –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ñ–∞–π–ª–µ
 */
async function estimateTokens(filePath: string): Promise<number> {
  try {
    const content = await fs.readFile(filePath, 'utf-8');
    const words = content.split(/\s+/).length;
    return Math.ceil(words / 1000); // –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ –≤ —Ç—ã—Å—è—á–∞—Ö
  } catch {
    return 0;
  }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç (–Ω–µ Super App)
 */
async function exportCurrentProject(options: {
  output?: string;
  force?: boolean;
}): Promise<string> {
  const { output, force = false } = options;
  
  console.log(chalk.blue('üöÄ –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...'));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ code2prompt
  const hasCode2Prompt = await checkCode2Prompt();
  if (!hasCode2Prompt) {
    console.log(chalk.yellow('\nüí° –°–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ code2prompt:'));
    console.log(chalk.gray('   npm install -g code2prompt'));
    console.log(chalk.gray('   yarn global add code2prompt'));
    console.log(chalk.gray('   pnpm add -g code2prompt'));
    console.log(chalk.gray('   brew install code2prompt (macOS)'));
    throw new Error(
      'code2prompt –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã—à–µ.'
    );
  }
  
  const projectRoot = process.cwd();
  console.log(chalk.gray(`–¢–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç: ${projectRoot}`));
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
  const exportDir = path.join(projectRoot, '.neira', 'export_code');
  const datePrefix = new Date().toISOString().slice(0, 10).replace(/-/g, '-');
  const timePrefix = new Date().toTimeString().slice(0, 5).replace(':', '');
  
  const versionDir = path.join(exportDir, datePrefix, `v${timePrefix}`);
  await fs.mkdir(versionDir, { recursive: true });
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  const projectName = path.basename(projectRoot);
  const outputFileName = output || `v${timePrefix}-${datePrefix}-${projectName}.md`;
  const outputFile = path.join(versionDir, outputFileName);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª (–µ—Å–ª–∏ –Ω–µ force)
  if (!force) {
    try {
      await fs.access(outputFile);
      console.log(chalk.yellow(`–§–∞–π–ª ${outputFileName} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏.`));
      return outputFile;
    } catch {
      // –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    }
  }
  
  // –ß–∏—Ç–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .exportignore
  const additionalExcludes = await readExportIgnore(projectRoot);
  
  console.log(chalk.blue('üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞:'));
  console.log(`   –ü—Ä–æ–µ–∫—Ç: ${projectName}`);
  console.log(`   –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: ${outputFile}`);
  if (additionalExcludes.length > 0) {
    console.log(`   –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è: ${additionalExcludes.length} –ø—Ä–∞–≤–∏–ª –∏–∑ .exportignore`);
  }
  console.log('----------------------------------------');
  
  // –°—Ç—Ä–æ–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è code2prompt
  const basicExcludes = [
    'node_modules',
    'dist',
    '.git',
    '*.log',
    '*.map',
    '*.lock',
    '*.DS_Store',
    '.idea',
    '.vscode',
    'coverage',
    '.next',
    'build',
    'out',
    '.turbo',
    'tmp',
    'temp',
    '.cache',
    '*.tsbuildinfo',
    '*.tgz',
    '*.tar.gz'
  ];
  
  const args = [
    '.', // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
    '--no-clipboard',
    '-O', outputFile
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
  for (const exclude of basicExcludes) {
    args.push('-e', exclude);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .exportignore
  for (const exclude of additionalExcludes) {
    args.push('-e', exclude);
  }
  
  console.log(chalk.blue('‚öôÔ∏è  –ó–∞–ø—É—Å–∫ code2prompt...'));
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º code2prompt
  await runCode2Prompt(args);
  
  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
  const tokens = await estimateTokens(outputFile);
  
  console.log(chalk.green('‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!'));
  console.log(chalk.blue('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:'));
  console.log(`   –†–∞–∑–º–µ—Ä: ~${tokens}k —Ç–æ–∫–µ–Ω–æ–≤`);
  console.log(`   –§–∞–π–ª: ${outputFile}`);
  
  return outputFile;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–¥–∞
 */
export async function exportCode(options: {
  profile: ExportProfile;
  output?: string;
  force?: boolean;
}): Promise<string | void> {
  const { profile, output, force = false } = options;
  
  console.log(chalk.blue('üöÄ –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–¥–∞ NEIRA Super App...'));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ code2prompt
  const hasCode2Prompt = await checkCode2Prompt();
  if (!hasCode2Prompt) {
    console.log(chalk.yellow('\nüí° –°–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ code2prompt:'));
    console.log(chalk.gray('   npm install -g code2prompt'));
    console.log(chalk.gray('   yarn global add code2prompt'));
    console.log(chalk.gray('   pnpm add -g code2prompt'));
    console.log(chalk.gray('   brew install code2prompt (macOS)'));
    throw new Error(
      'code2prompt –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã—à–µ.'
    );
  }
  
  // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ NEIRA Super App
  let projectRoot: string;
  try {
    projectRoot = await findProjectRoot();
    console.log(chalk.gray(`–ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ NEIRA Super App: ${projectRoot}`));
  } catch (error) {
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω Super App, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç
    console.log(chalk.yellow('‚ö†Ô∏è  NEIRA Super App –Ω–µ –Ω–∞–π–¥–µ–Ω, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç'));
    const exportFilePath = await exportCurrentProject({ output, force });
    return exportFilePath;
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã
  const dynamicPackages = await getDynamicPackages(projectRoot);
  
  // –ß–∏—Ç–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ .exportignore
  const additionalExcludes = await readExportIgnore(projectRoot);
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
  const exportDir = path.join(projectRoot, '.neira', 'export_code');
  const datePrefix = new Date().toISOString().slice(0, 10).replace(/-/g, '-');
  const timePrefix = new Date().toTimeString().slice(0, 5).replace(':', '');
  
  const versionDir = path.join(exportDir, datePrefix, `v${timePrefix}`);
  await fs.mkdir(versionDir, { recursive: true });
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  const outputFileName = output || `v${timePrefix}-${datePrefix}-${profile}-neira-super-app.md`;
  const outputFile = path.join(versionDir, outputFileName);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª (–µ—Å–ª–∏ –Ω–µ force)
  if (!force) {
    try {
      await fs.access(outputFile);
      console.log(chalk.yellow(`–§–∞–π–ª ${outputFileName} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏.`));
      return outputFile;
    } catch {
      // –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    }
  }
  
  console.log(chalk.blue('üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞:'));
  console.log(`   –ü—Ä–æ—Ñ–∏–ª—å: ${profile}`);
  console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${EXPORT_PROFILES[profile] || '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–∞–∫–µ—Ç'}`);
  console.log(`   –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: ${outputFile}`);
  if (additionalExcludes.length > 0) {
    console.log(`   –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è: ${additionalExcludes.length} –ø—Ä–∞–≤–∏–ª –∏–∑ .exportignore`);
  }
  console.log('----------------------------------------');
  
  // –°—Ç—Ä–æ–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è code2prompt
  const args = buildCode2PromptArgs(projectRoot, profile, outputFile, dynamicPackages, additionalExcludes);
  
  console.log(chalk.blue('‚öôÔ∏è  –ó–∞–ø—É—Å–∫ code2prompt...'));
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º code2prompt
  await runCode2Prompt(args);
  
  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
  const tokens = await estimateTokens(outputFile);
  
  console.log(chalk.green('‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!'));
  console.log(chalk.blue('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:'));
  console.log(`   –†–∞–∑–º–µ—Ä: ~${tokens}k —Ç–æ–∫–µ–Ω–æ–≤`);
  console.log(`   –§–∞–π–ª: ${outputFile}`);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  if (profile === 'general') {
    console.log(chalk.gray('\nüí° –î–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:'));
    for (const pkg of dynamicPackages) {
      console.log(chalk.gray(`   neira-cli-mcp export ${pkg}`));
    }
  }
  
  return outputFile;
} 